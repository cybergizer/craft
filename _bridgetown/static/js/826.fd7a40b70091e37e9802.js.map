{"version":3,"sources":["webpack://euruko2022/./node_modules/d3-fetch/src/blob.js","webpack://euruko2022/./node_modules/d3-fetch/src/buffer.js","webpack://euruko2022/./node_modules/d3-dsv/src/dsv.js","webpack://euruko2022/./node_modules/d3-dsv/src/csv.js","webpack://euruko2022/./node_modules/d3-dsv/src/tsv.js","webpack://euruko2022/./node_modules/d3-fetch/src/text.js","webpack://euruko2022/./node_modules/d3-fetch/src/dsv.js","webpack://euruko2022/./node_modules/d3-fetch/src/image.js","webpack://euruko2022/./node_modules/d3-fetch/src/json.js","webpack://euruko2022/./node_modules/d3-fetch/src/xml.js"],"names":["responseBlob","response","ok","Error","status","statusText","blob","input","init","fetch","then","responseArrayBuffer","arrayBuffer","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","name","i","JSON","stringify","join","inferColumns","rows","columnSet","Object","create","forEach","row","column","push","pad","value","width","s","length","Array","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","text","f","t","N","I","n","eof","eol","token","c","j","slice","replace","preformatBody","formatValue","formatRow","Date","hours","date","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","year","getUTCFullYear","getUTCMonth","getUTCDate","test","parse","convert","object","customConverter","format","concat","formatBody","formatRows","csv","dsv","csvParse","tsv","tsvParse","responseText","dsvParse","arguments","Promise","resolve","reject","image","Image","key","onerror","onload","src","responseJson","json","parser","type","DOMParser","parseFromString","html","svg"],"mappings":"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","file":"826.fd7a40b70091e37e9802.js","sourcesContent":["function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  if (response.status === 204 || response.status === 205) return;\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text.js\";\n\nfunction parser(type) {\n  return (input, init) => text(input, init)\n    .then(text => (new DOMParser).parseFromString(text, type));\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n"],"sourceRoot":""}