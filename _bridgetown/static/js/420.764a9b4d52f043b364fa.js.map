{"version":3,"sources":["webpack://euruko2022/./node_modules/d3-array/src/fsum.js","webpack://euruko2022/./node_modules/d3-array/src/merge.js","webpack://euruko2022/./node_modules/d3-array/src/range.js","webpack://euruko2022/./node_modules/d3-geo/src/math.js","webpack://euruko2022/./node_modules/d3-geo/src/noop.js","webpack://euruko2022/./node_modules/d3-geo/src/stream.js","webpack://euruko2022/./node_modules/d3-geo/src/area.js","webpack://euruko2022/./node_modules/d3-geo/src/bounds.js","webpack://euruko2022/./node_modules/d3-geo/src/cartesian.js","webpack://euruko2022/./node_modules/d3-geo/src/centroid.js","webpack://euruko2022/./node_modules/d3-geo/src/constant.js","webpack://euruko2022/./node_modules/d3-geo/src/compose.js","webpack://euruko2022/./node_modules/d3-geo/src/rotation.js","webpack://euruko2022/./node_modules/d3-geo/src/circle.js","webpack://euruko2022/./node_modules/d3-geo/src/clip/buffer.js","webpack://euruko2022/./node_modules/d3-geo/src/pointEqual.js","webpack://euruko2022/./node_modules/d3-geo/src/clip/rejoin.js","webpack://euruko2022/./node_modules/d3-geo/src/polygonContains.js","webpack://euruko2022/./node_modules/d3-geo/src/clip/index.js","webpack://euruko2022/./node_modules/d3-geo/src/clip/antimeridian.js","webpack://euruko2022/./node_modules/d3-geo/src/clip/circle.js","webpack://euruko2022/./node_modules/d3-geo/src/clip/rectangle.js","webpack://euruko2022/./node_modules/d3-geo/src/length.js","webpack://euruko2022/./node_modules/d3-geo/src/clip/line.js","webpack://euruko2022/./node_modules/d3-geo/src/clip/extent.js","webpack://euruko2022/./node_modules/d3-geo/src/distance.js","webpack://euruko2022/./node_modules/d3-geo/src/contains.js","webpack://euruko2022/./node_modules/d3-geo/src/graticule.js","webpack://euruko2022/./node_modules/d3-geo/src/interpolate.js","webpack://euruko2022/./node_modules/d3-geo/src/identity.js","webpack://euruko2022/./node_modules/d3-geo/src/path/area.js","webpack://euruko2022/./node_modules/d3-geo/src/path/bounds.js","webpack://euruko2022/./node_modules/d3-geo/src/path/centroid.js","webpack://euruko2022/./node_modules/d3-geo/src/path/context.js","webpack://euruko2022/./node_modules/d3-geo/src/path/measure.js","webpack://euruko2022/./node_modules/d3-geo/src/path/string.js","webpack://euruko2022/./node_modules/d3-geo/src/path/index.js","webpack://euruko2022/./node_modules/d3-geo/src/transform.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/fit.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/resample.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/index.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/conic.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/albers.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/albersUsa.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/azimuthal.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/mercator.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/conicConformal.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/equirectangular.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/equalEarth.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/gnomonic.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/identity.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/orthographic.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/stereographic.js","webpack://euruko2022/./node_modules/d3-geo/src/projection/transverseMercator.js"],"names":["Adder","constructor","this","_partials","Float64Array","_n","add","x","p","i","j","y","hi","lo","Math","abs","valueOf","n","fsum","values","valueof","adder","value","index","fcumsum","from","v","merge","arrays","Array","array","flatten","range","start","stop","step","arguments","length","max","ceil","epsilon","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","exp","hypot","floor","log","pow","sin","sign","sqrt","tan","acos","asin","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","lambda00","phi00","lambda0","cosPhi0","sinPhi0","phi0","lambda1","phi1","lambda2","p0","deltaSum","ranges","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","k","u","spherical","cartesian","cartesianDot","a","b","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","l","W0","W1","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","x0","y0","z0","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","push","linePoint","normal","inflection","phii","delta","lambdai","antimeridian","angle","rangeCompare","rangeContains","feature","merged","deltaMax","Infinity","sort","NaN","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","z","centroidLinePointFirst","centroidLinePoint","w","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","m","compose","invert","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","rotate","forward","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","circleRadius","t","ring","center","constant","precision","circle","c","apply","r","_","line","lines","rejoin","pop","concat","shift","result","Intersection","points","other","entry","o","e","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p1","pointEqual","current","isSubject","longitude","polygon","winding","sum","point0","sinPhi1","cosPhi1","point1","absDelta","arc","intersection","phiArc","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","polygonContains","pointLine","clean","ringSegments","filter","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","t2","q","polar","q1","code","c0","v0","v00","point2","lengthSum","clipMax","clipMin","clipRectangle","x1","y1","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","a0","b0","b1","polygonInside","cleanInside","min","ax","ay","dx","dy","cache","cacheStream","extent","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","distance","ao","bo","ab","map","ringRadians","pointRadians","graticuleX","graticuleY","graticule","X","Y","DX","DY","outline","slice","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","B","x00","y00","area","bounds","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","prototype","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","cacheDigits","cacheAppend","cacheRadius","cacheCircle","PathString","digits","_append","append","RangeError","strings","appendRound","s","projection","projectionStream","contextStream","path","measure","identity","methods","transformer","TransformStream","key","fit","fitBounds","clipExtent","scale","translate","fitExtent","h","fitSize","size","fitWidth","width","fitHeight","height","maxDepth","cosMinDistance","project","delta2","resampleLineTo","depth","d2","phi2","x2","y2","dx2","dy2","dz","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","theta","preclip","postclip","recenter","resample","reset","transformRotate","clipAngle","reflectX","reflectY","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","lower48Point","alaskaPoint","hawaiiPoint","lower48","albers","alaska","hawaii","pointStream","albersUsa","streams","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","f","fy","equirectangularRaw","conicEquidistantRaw","g","gy","nx","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","sa","tx","ty","kx","ky","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw"],"mappings":"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","file":"420.764a9b4d52f043b364fa.js","sourcesContent":["// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import clipRectangle from \"./rectangle.js\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","export default x => x;\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n"],"sourceRoot":""}