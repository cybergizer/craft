{"version":3,"sources":["webpack://euruko2022/./node_modules/d3-array/src/ascending.js","webpack://euruko2022/./node_modules/d3-array/src/bisect.js","webpack://euruko2022/./node_modules/d3-array/src/bisector.js","webpack://euruko2022/./node_modules/d3-array/src/descending.js","webpack://euruko2022/./node_modules/d3-array/src/fsum.js","webpack://euruko2022/./node_modules/d3-array/src/greatest.js","webpack://euruko2022/./node_modules/d3-array/src/blur.js","webpack://euruko2022/./node_modules/d3-array/src/count.js","webpack://euruko2022/./node_modules/d3-array/src/cross.js","webpack://euruko2022/./node_modules/d3-array/src/cumsum.js","webpack://euruko2022/./node_modules/d3-array/src/variance.js","webpack://euruko2022/./node_modules/d3-array/src/deviation.js","webpack://euruko2022/./node_modules/d3-array/src/extent.js","webpack://euruko2022/./node_modules/d3-array/src/identity.js","webpack://euruko2022/./node_modules/d3-array/src/group.js","webpack://euruko2022/./node_modules/d3-array/src/groupSort.js","webpack://euruko2022/./node_modules/d3-array/src/array.js","webpack://euruko2022/./node_modules/d3-array/src/constant.js","webpack://euruko2022/./node_modules/d3-array/src/nice.js","webpack://euruko2022/./node_modules/d3-array/src/threshold/sturges.js","webpack://euruko2022/./node_modules/d3-array/src/bin.js","webpack://euruko2022/./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack://euruko2022/./node_modules/d3-array/src/threshold/scott.js","webpack://euruko2022/./node_modules/d3-array/src/mean.js","webpack://euruko2022/./node_modules/d3-array/src/median.js","webpack://euruko2022/./node_modules/d3-array/src/mode.js","webpack://euruko2022/./node_modules/d3-array/src/pairs.js","webpack://euruko2022/./node_modules/d3-array/src/rank.js","webpack://euruko2022/./node_modules/d3-array/src/least.js","webpack://euruko2022/./node_modules/d3-array/src/leastIndex.js","webpack://euruko2022/./node_modules/d3-array/src/greatestIndex.js","webpack://euruko2022/./node_modules/d3-array/src/scan.js","webpack://euruko2022/./node_modules/d3-array/src/shuffle.js","webpack://euruko2022/./node_modules/d3-array/src/sum.js","webpack://euruko2022/./node_modules/d3-array/src/transpose.js","webpack://euruko2022/./node_modules/d3-array/src/zip.js","webpack://euruko2022/./node_modules/d3-array/src/every.js","webpack://euruko2022/./node_modules/d3-array/src/some.js","webpack://euruko2022/./node_modules/d3-array/src/filter.js","webpack://euruko2022/./node_modules/d3-array/src/map.js","webpack://euruko2022/./node_modules/d3-array/src/reduce.js","webpack://euruko2022/./node_modules/d3-array/src/reverse.js","webpack://euruko2022/./node_modules/d3-array/src/difference.js","webpack://euruko2022/./node_modules/d3-array/src/disjoint.js","webpack://euruko2022/./node_modules/d3-array/src/intersection.js","webpack://euruko2022/./node_modules/d3-array/src/superset.js","webpack://euruko2022/./node_modules/d3-array/src/subset.js","webpack://euruko2022/./node_modules/d3-array/src/union.js","webpack://euruko2022/./node_modules/d3-array/src/max.js","webpack://euruko2022/./node_modules/d3-array/src/maxIndex.js","webpack://euruko2022/./node_modules/d3-array/src/merge.js","webpack://euruko2022/./node_modules/d3-array/src/min.js","webpack://euruko2022/./node_modules/d3-array/src/minIndex.js","webpack://euruko2022/./node_modules/d3-array/src/number.js","webpack://euruko2022/./node_modules/d3-array/src/permute.js","webpack://euruko2022/./node_modules/d3-array/src/quantile.js","webpack://euruko2022/./node_modules/d3-array/src/quickselect.js","webpack://euruko2022/./node_modules/d3-array/src/range.js","webpack://euruko2022/./node_modules/d3-array/src/sort.js","webpack://euruko2022/./node_modules/d3-array/src/ticks.js","webpack://euruko2022/./node_modules/internmap/src/index.js"],"names":["ascending","a","b","NaN","ascendingBisect","bisectRight","right","bisectLeft","left","bisectCenter","center","bisector","f","compare1","compare2","delta","x","lo","hi","length","mid","d","zero","i","descending","Adder","constructor","this","_partials","Float64Array","_n","add","p","j","y","Math","abs","valueOf","n","fsum","values","valueof","adder","value","index","fcumsum","from","v","greatest","compare","max","defined","maxValue","element","r","RangeError","floor","blur","blurf","temp","slice","blur2","Blur2","blurImage","radius","T","S","start","stop","step","data","rx","ry","width","height","blurx","blury","blurh","blurv","w","h","radius0","sum","s","min","bluri","t","s0","s1","count","array","empty","arrayify","Array","cross","reduce","reducer","pop","lengths","map","fill","product","some","push","cumsum","variance","mean","deviation","sqrt","extent","identity","group","keys","nest","groups","flatten","flatMap","g","key","flatGroup","flatRollup","rollups","rollup","unique","indexes","Error","regroup","keyof","get","set","groupSort","sort","ak","av","bk","bv","prototype","constant","nice","prestep","isFinite","ceil","thresholdSturges","log","LN2","bin","domain","threshold","histogram","isArray","xz","x0","x1","tz","tn","ticks","m","bins","bisect","_","arguments","thresholds","call","thresholdFreedmanDiaconis","quantile","pow","thresholdScott","cbrt","median","medianIndex","mode","counts","modeValue","modeCount","pairs","pairof","pair","previous","first","rank","Symbol","iterator","TypeError","V","R","compareIndex","k","Uint32Array","forEach","c","least","minValue","leastIndex","minIndex","greatestIndex","maxIndex","scan","shuffler","random","i0","i1","transpose","matrix","row","zip","every","test","filter","mapper","done","next","reverse","difference","others","other","delete","disjoint","has","Object","is","intersection","out","superset","Set","o","io","intern","ivalue","subset","union","merge","arrays","number","numbers","permute","source","isNaN","value0","subarray","quantileSorted","quantileIndex","quickselect","Infinity","z","exp","sd","swap","range","F","ascendingDefined","compareDefined","e10","e5","e2","tickSpec","power","log10","error","factor","i2","inc","round","tickIncrement","tickStep","InternMap","Map","entries","super","defineProperties","_intern","_key","intern_get","intern_set","intern_delete","InternSet"],"mappings":"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","file":"845.081048abdbeb4335d0df.js","sourcesContent":["export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","import ascending from \"./ascending.js\";\n\nexport default function greatest(values, compare = ascending) {\n  let max;\n  let defined = false;\n  if (compare.length === 1) {\n    let maxValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, maxValue) > 0\n          : ascending(value, value) === 0) {\n        max = element;\n        maxValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, max) > 0\n          : compare(value, value) === 0) {\n        max = value;\n        defined = true;\n      }\n    }\n  }\n  return max;\n}\n","export function blur(values, r) {\n  if (!((r = +r) >= 0)) throw new RangeError(\"invalid r\");\n  let length = values.length;\n  if (!((length = Math.floor(length)) >= 0)) throw new RangeError(\"invalid length\");\n  if (!length || !r) return values;\n  const blur = blurf(r);\n  const temp = values.slice();\n  blur(values, temp, 0, length, 1);\n  blur(temp, values, 0, length, 1);\n  blur(values, temp, 0, length, 1);\n  return values;\n}\n\nexport const blur2 = Blur2(blurf);\n\nexport const blurImage = Blur2(blurfImage);\n\nfunction Blur2(blur) {\n  return function(data, rx, ry = rx) {\n    if (!((rx = +rx) >= 0)) throw new RangeError(\"invalid rx\");\n    if (!((ry = +ry) >= 0)) throw new RangeError(\"invalid ry\");\n    let {data: values, width, height} = data;\n    if (!((width = Math.floor(width)) >= 0)) throw new RangeError(\"invalid width\");\n    if (!((height = Math.floor(height !== undefined ? height : values.length / width)) >= 0)) throw new RangeError(\"invalid height\");\n    if (!width || !height || (!rx && !ry)) return data;\n    const blurx = rx && blur(rx);\n    const blury = ry && blur(ry);\n    const temp = values.slice();\n    if (blurx && blury) {\n      blurh(blurx, temp, values, width, height);\n      blurh(blurx, values, temp, width, height);\n      blurh(blurx, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n      blurv(blury, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n    } else if (blurx) {\n      blurh(blurx, values, temp, width, height);\n      blurh(blurx, temp, values, width, height);\n      blurh(blurx, values, temp, width, height);\n    } else if (blury) {\n      blurv(blury, values, temp, width, height);\n      blurv(blury, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n    }\n    return data;\n  };\n}\n\nfunction blurh(blur, T, S, w, h) {\n  for (let y = 0, n = w * h; y < n;) {\n    blur(T, S, y, y += w, 1);\n  }\n}\n\nfunction blurv(blur, T, S, w, h) {\n  for (let x = 0, n = w * h; x < w; ++x) {\n    blur(T, S, x, x + n, w);\n  }\n}\n\nfunction blurfImage(radius) {\n  const blur = blurf(radius);\n  return (T, S, start, stop, step) => {\n    start <<= 2, stop <<= 2, step <<= 2;\n    blur(T, S, start + 0, stop + 0, step);\n    blur(T, S, start + 1, stop + 1, step);\n    blur(T, S, start + 2, stop + 2, step);\n    blur(T, S, start + 3, stop + 3, step);\n  };\n}\n\n// Given a target array T, a source array S, sets each value T[i] to the average\n// of {S[i - r], …, S[i], …, S[i + r]}, where r = ⌊radius⌋, start <= i < stop,\n// for each i, i + step, i + 2 * step, etc., and where S[j] is clamped between\n// S[start] (inclusive) and S[stop] (exclusive). If the given radius is not an\n// integer, S[i - r - 1] and S[i + r + 1] are added to the sum, each weighted\n// according to r - ⌊radius⌋.\nfunction blurf(radius) {\n  const radius0 = Math.floor(radius);\n  if (radius0 === radius) return bluri(radius);\n  const t = radius - radius0;\n  const w = 2 * radius + 1;\n  return (T, S, start, stop, step) => { // stop must be aligned!\n    if (!((stop -= step) >= start)) return; // inclusive stop\n    let sum = radius0 * S[start];\n    const s0 = step * radius0;\n    const s1 = s0 + step;\n    for (let i = start, j = start + s0; i < j; i += step) {\n      sum += S[Math.min(stop, i)];\n    }\n    for (let i = start, j = stop; i <= j; i += step) {\n      sum += S[Math.min(stop, i + s0)];\n      T[i] = (sum + t * (S[Math.max(start, i - s1)] + S[Math.min(stop, i + s1)])) / w;\n      sum -= S[Math.max(start, i - s0)];\n    }\n  };\n}\n\n// Like blurf, but optimized for integer radius.\nfunction bluri(radius) {\n  const w = 2 * radius + 1;\n  return (T, S, start, stop, step) => { // stop must be aligned!\n    if (!((stop -= step) >= start)) return; // inclusive stop\n    let sum = radius * S[start];\n    const s = step * radius;\n    for (let i = start, j = start + s; i < j; i += step) {\n      sum += S[Math.min(stop, i)];\n    }\n    for (let i = start, j = stop; i <= j; i += step) {\n      sum += S[Math.min(stop, i + s)];\n      T[i] = sum / w;\n      sum -= S[Math.max(start, i - s)];\n    }\n  };\n}\n","export default function count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n","function length(array) {\n  return array.length | 0;\n}\n\nfunction empty(length) {\n  return !(length > 0);\n}\n\nfunction arrayify(values) {\n  return typeof values !== \"object\" || \"length\" in values ? values : Array.from(values);\n}\n\nfunction reducer(reduce) {\n  return values => reduce(...values);\n}\n\nexport default function cross(...values) {\n  const reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n  values = values.map(arrayify);\n  const lengths = values.map(length);\n  const j = values.length - 1;\n  const index = new Array(j + 1).fill(0);\n  const product = [];\n  if (j < 0 || lengths.some(empty)) return product;\n  while (true) {\n    product.push(index.map((j, i) => values[i][j]));\n    let i = j;\n    while (++index[i] === lengths[i]) {\n      if (i === 0) return reduce ? product.map(reduce) : product;\n      index[i--] = 0;\n    }\n  }\n}\n","export default function cumsum(values, valueof) {\n  var sum = 0, index = 0;\n  return Float64Array.from(values, valueof === undefined\n    ? v => (sum += +v || 0)\n    : v => (sum += +valueof(v, index++, values) || 0));\n}","export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n","import variance from \"./variance.js\";\n\nexport default function deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function extent(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","export default function identity(x) {\n  return x;\n}\n","import {InternMap} from \"internmap\";\nimport identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nfunction flatten(groups, keys) {\n  for (let i = 1, n = keys.length; i < n; ++i) {\n    groups = groups.flatMap(g => g.pop().map(([key, value]) => [...g, key, value]));\n  }\n  return groups;\n}\n\nexport function flatGroup(values, ...keys) {\n  return flatten(groups(values, ...keys), keys);\n}\n\nexport function flatRollup(values, reduce, ...keys) {\n  return flatten(rollups(values, reduce, ...keys), keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nexport function index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nexport function indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n","import ascending from \"./ascending.js\";\nimport group, {rollup} from \"./group.js\";\nimport sort from \"./sort.js\";\n\nexport default function groupSort(values, reduce, key) {\n  return (reduce.length !== 2\n    ? sort(rollup(values, reduce, key), (([ak, av], [bk, bv]) => ascending(av, bv) || ascending(ak, bk)))\n    : sort(group(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || ascending(ak, bk))))\n    .map(([key]) => key);\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function constant(x) {\n  return () => x;\n}\n","import {tickIncrement} from \"./ticks.js\";\n\nexport default function nice(start, stop, count) {\n  let prestep;\n  while (true) {\n    const step = tickIncrement(start, stop, count);\n    if (step === prestep || step === 0 || !isFinite(step)) {\n      return [start, stop];\n    } else if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n    }\n    prestep = step;\n  }\n}\n","import count from \"../count.js\";\n\nexport default function thresholdSturges(values) {\n  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;\n}\n","import {slice} from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport nice from \"./nice.js\";\nimport ticks, {tickIncrement} from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\n\nexport default function bin() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        step,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1, tn = +tz;\n      if (domain === extent) [x0, x1] = nice(x0, x1, tn);\n      tz = ticks(x0, x1, tn);\n\n      // If the domain is aligned with the first tick (which it will by\n      // default), then we can use quantization rather than bisection to bin\n      // values, which is substantially faster.\n      if (tz[0] <= x0) step = tickIncrement(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain’s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don’t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === extent) {\n          const step = tickIncrement(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    // Be careful not to mutate an array owned by the user!\n    var m = tz.length, a = 0, b = m;\n    while (tz[a] <= x0) ++a;\n    while (tz[b - 1] > x1) --b;\n    if (a || b < m) tz = tz.slice(a, b), m = b - a;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    if (isFinite(step)) {\n      if (step > 0) {\n        for (i = 0; i < n; ++i) {\n          if ((x = values[i]) != null && x0 <= x && x <= x1) {\n            bins[Math.min(m, Math.floor((x - x0) / step))].push(data[i]);\n          }\n        }\n      } else if (step < 0) {\n        for (i = 0; i < n; ++i) {\n          if ((x = values[i]) != null && x0 <= x && x <= x1) {\n            const j = Math.floor((x0 - x) * step);\n            bins[Math.min(m, j + (tz[j] <= x))].push(data[i]); // handle off-by-one due to rounding\n          }\n        }\n      }\n    } else {\n      for (i = 0; i < n; ++i) {\n        if ((x = values[i]) != null && x0 <= x && x <= x1) {\n          bins[bisect(tz, x, 0, m)].push(data[i]);\n        }\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : constant(Array.isArray(_) ? slice.call(_) : _), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import count from \"../count.js\";\nimport quantile from \"../quantile.js\";\n\nexport default function thresholdFreedmanDiaconis(values, min, max) {\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(count(values), -1 / 3)));\n}\n","import count from \"../count.js\";\nimport deviation from \"../deviation.js\";\n\nexport default function thresholdScott(values, min, max) {\n  return Math.ceil((max - min) * Math.cbrt(count(values)) / (3.49 * deviation(values)));\n}\n","export default function mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n","import quantile, {quantileIndex} from \"./quantile.js\";\n\nexport default function median(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n\nexport function medianIndex(values, valueof) {\n  return quantileIndex(values, 0.5, valueof);\n}\n","import {InternMap} from \"internmap\";\n\nexport default function mode(values, valueof) {\n  const counts = new InternMap();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && value >= value) {\n        counts.set(value, (counts.get(value) || 0) + 1);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && value >= value) {\n        counts.set(value, (counts.get(value) || 0) + 1);\n      }\n    }\n  }\n  let modeValue;\n  let modeCount = 0;\n  for (const [value, count] of counts) {\n    if (count > modeCount) {\n      modeCount = count;\n      modeValue = value;\n    }\n  }\n  return modeValue;\n}\n","export default function pairs(values, pairof = pair) {\n  const pairs = [];\n  let previous;\n  let first = false;\n  for (const value of values) {\n    if (first) pairs.push(pairof(previous, value));\n    previous = value;\n    first = true;\n  }\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import ascending from \"./ascending.js\";\nimport {ascendingDefined, compareDefined} from \"./sort.js\";\n\nexport default function rank(values, valueof = ascending) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  let V = Array.from(values);\n  const R = new Float64Array(V.length);\n  if (valueof.length !== 2) V = V.map(valueof), valueof = ascending;\n  const compareIndex = (i, j) => valueof(V[i], V[j]);\n  let k, r;\n  Uint32Array\n    .from(V, (_, i) => i)\n    .sort(valueof === ascending ? (i, j) => ascendingDefined(V[i], V[j]) : compareDefined(compareIndex))\n    .forEach((j, i) => {\n      const c = compareIndex(j, k === undefined ? j : k);\n      if (c >= 0) {\n        if (k === undefined || c > 0) k = j, r = i;\n        R[j] = r;\n      } else {\n        R[j] = NaN;\n      }\n    });\n  return R;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, minValue) < 0\n          : ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, min) < 0\n          : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\nimport minIndex from \"./minIndex.js\";\n\nexport default function leastIndex(values, compare = ascending) {\n  if (compare.length === 1) return minIndex(values, compare);\n  let minValue;\n  let min = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (min < 0\n        ? compare(value, value) === 0\n        : compare(value, minValue) < 0) {\n      minValue = value;\n      min = index;\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\nimport maxIndex from \"./maxIndex.js\";\n\nexport default function greatestIndex(values, compare = ascending) {\n  if (compare.length === 1) return maxIndex(values, compare);\n  let maxValue;\n  let max = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (max < 0\n        ? compare(value, value) === 0\n        : compare(value, maxValue) > 0) {\n      maxValue = value;\n      max = index;\n    }\n  }\n  return max;\n}\n","import leastIndex from \"./leastIndex.js\";\n\nexport default function scan(values, compare) {\n  const index = leastIndex(values, compare);\n  return index < 0 ? undefined : index;\n}\n","export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","import min from \"./min.js\";\n\nexport default function transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose.js\";\n\nexport default function zip() {\n  return transpose(arguments);\n}\n","export default function every(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (!test(value, ++index, values)) {\n      return false;\n    }\n  }\n  return true;\n}\n","export default function some(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      return true;\n    }\n  }\n  return false;\n}\n","export default function filter(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  const array = [];\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      array.push(value);\n    }\n  }\n  return array;\n}\n","export default function map(values, mapper) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  if (typeof mapper !== \"function\") throw new TypeError(\"mapper is not a function\");\n  return Array.from(values, (value, index) => mapper(value, index, values));\n}\n","export default function reduce(values, reducer, value) {\n  if (typeof reducer !== \"function\") throw new TypeError(\"reducer is not a function\");\n  const iterator = values[Symbol.iterator]();\n  let done, next, index = -1;\n  if (arguments.length < 3) {\n    ({done, value} = iterator.next());\n    if (done) return;\n    ++index;\n  }\n  while (({done, value: next} = iterator.next()), !done) {\n    value = reducer(value, next, ++index, values);\n  }\n  return value;\n}\n","export default function reverse(values) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  return Array.from(values).reverse();\n}\n","import {InternSet} from \"internmap\";\n\nexport default function difference(values, ...others) {\n  values = new InternSet(values);\n  for (const other of others) {\n    for (const value of other) {\n      values.delete(value);\n    }\n  }\n  return values;\n}\n","import {InternSet} from \"internmap\";\n\nexport default function disjoint(values, other) {\n  const iterator = other[Symbol.iterator](), set = new InternSet();\n  for (const v of values) {\n    if (set.has(v)) return false;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) break;\n      if (Object.is(v, value)) return false;\n      set.add(value);\n    }\n  }\n  return true;\n}\n","import {InternSet} from \"internmap\";\n\nexport default function intersection(values, ...others) {\n  values = new InternSet(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n\nfunction set(values) {\n  return values instanceof InternSet ? values : new InternSet(values);\n}\n","export default function superset(values, other) {\n  const iterator = values[Symbol.iterator](), set = new Set();\n  for (const o of other) {\n    const io = intern(o);\n    if (set.has(io)) continue;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) return false;\n      const ivalue = intern(value);\n      set.add(ivalue);\n      if (Object.is(io, ivalue)) break;\n    }\n  }\n  return true;\n}\n\nfunction intern(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n","import superset from \"./superset.js\";\n\nexport default function subset(values, other) {\n  return superset(other, values);\n}\n","import {InternSet} from \"internmap\";\n\nexport default function union(...others) {\n  const set = new InternSet();\n  for (const other of others) {\n    for (const o of other) {\n      set.add(o);\n    }\n  }\n  return set;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  }\n  return maxIndex;\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","export default function minIndex(values, valueof) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  }\n  return minIndex;\n}\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","export default function permute(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n","import max from \"./max.js\";\nimport maxIndex from \"./maxIndex.js\";\nimport min from \"./min.js\";\nimport minIndex from \"./minIndex.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\nimport {ascendingDefined} from \"./sort.js\";\nimport greatest from \"./greatest.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length) || isNaN(p = +p)) return;\n  if (p <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length) || isNaN(p = +p)) return;\n  if (p <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileIndex(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length) || isNaN(p = +p)) return;\n  if (p <= 0 || n < 2) return minIndex(values);\n  if (p >= 1) return maxIndex(values);\n  var n,\n      i = Math.floor((n - 1) * p),\n      order = (i, j) => ascendingDefined(values[i], values[j]),\n      index = quickselect(Uint32Array.from(values, (_, i) => i), i, 0, n - 1, order);\n  return greatest(index.subarray(0, i + 1), i => values[i]);\n}\n","import {ascendingDefined, compareDefined} from \"./sort.js\";\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(array, k, left = 0, right = Infinity, compare) {\n  k = Math.floor(k);\n  left = Math.floor(Math.max(0, left));\n  right = Math.floor(Math.min(array.length - 1, right));\n\n  if (!(left <= k && k <= right)) return array;\n\n  compare = compare === undefined ? ascendingDefined : compareDefined(compare);\n\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import ascending from \"./ascending.js\";\nimport permute from \"./permute.js\";\n\nexport default function sort(values, ...F) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  values = Array.from(values);\n  let [f] = F;\n  if ((f && f.length !== 2) || F.length > 1) {\n    const index = Uint32Array.from(values, (d, i) => i);\n    if (F.length > 1) {\n      F = F.map(f => values.map(f));\n      index.sort((i, j) => {\n        for (const f of F) {\n          const c = ascendingDefined(f[i], f[j]);\n          if (c) return c;\n        }\n      });\n    } else {\n      f = values.map(f);\n      index.sort((i, j) => ascendingDefined(f[i], f[j]));\n    }\n    return permute(values, index);\n  }\n  return values.sort(compareDefined(f));\n}\n\nexport function compareDefined(compare = ascending) {\n  if (compare === ascending) return ascendingDefined;\n  if (typeof compare !== \"function\") throw new TypeError(\"compare is not a function\");\n  return (a, b) => {\n    const x = compare(a, b);\n    if (x || x === 0) return x;\n    return (compare(b, b) === 0) - (compare(a, a) === 0);\n  };\n}\n\nexport function ascendingDefined(a, b) {\n  return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);\n}\n","const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n","export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(key);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n"],"sourceRoot":""}